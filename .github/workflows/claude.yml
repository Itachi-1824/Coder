name: Claude Code
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat << 'EOF' > $HOME/.claude-code-router/config.json
          {
            "log": true,
            "NON_INTERACTIVE_MODE": true,
            "API_TIMEOUT_MS": 600000,
            "Providers": [
              {
                "name": "pollinations",
                "api_base_url": "https://text.pollinations.ai/openai",
                "api_key": "${{ secrets.OPENAI_API_KEY }}",
                "models": ["deepseek"],
                "transformer": {
                  "use": ["tooluse"]
                }
              }
            ],
            "Router": {
              "default": "pollinations,deepseek"
            }
          }
          EOF
        shell: bash
      
      - name: Start Claude Code Router
        run: |
          # Start the router in the background
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@latest start > /tmp/router.log 2>&1 &
          ROUTER_PID=$!
          
          # Wait for router to be ready (check if port 3456 is listening)
          echo "Waiting for router to start..."
          for i in {1..30}; do
            if curl -s http://localhost:3456/health > /dev/null 2>&1 || nc -z localhost 3456 2>/dev/null; then
              echo "Router is ready!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Router failed to start within 30 seconds"
              echo "Router logs:"
              cat /tmp/router.log
              exit 1
            fi
            echo "Attempt $i/30: Router not ready yet, waiting..."
            sleep 1
          done
          
          # Verify router is still running
          if ! kill -0 $ROUTER_PID 2>/dev/null; then
            echo "Router process died"
            echo "Router logs:"
            cat /tmp/router.log
            exit 1
          fi
          
          echo "Router is running with PID: $ROUTER_PID"
        shell: bash
      
      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: "any-string-is-ok"
          
          # Additional permissions for reading CI results
          additional_permissions: |
            actions: read
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"
          
          # Optional: Add custom instructions for Claude to customize its behavior for your project
          # custom_instructions: |
          #   Follow our coding standards
          #   Ensure all new code has tests
          #   Use TypeScript for new files
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test
